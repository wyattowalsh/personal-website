// globals.scss

@use 'variables.module.scss'as variables;

@use 'tailwindcss/base';
@use 'tailwindcss/components';
@use 'tailwindcss/utilities';

@layer base {
  :root {
    @include variables.light;
  }

  html.dark {
    @include variables.dark;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  a:not(.no-underline) {
    @apply text-primary underline transition-colors duration-300;
  }

  a.no-underline, 
  .no-underline a {
    text-decoration: none;
  }

  a {
    @apply text-primary underline transition-colors duration-300;
  }

  a:hover {
    color: var(--primary-foreground);
  }

  .prose {
    @apply mx-auto;
    color: var(--foreground);
    @apply prose-headings:gradient-heading;
  }

  code {
    @apply bg-muted text-accent-foreground px-1.5 py-0.5 rounded;
  }

  pre {
    @apply bg-card text-card-foreground p-4 rounded-lg overflow-x-auto;
  }

  .gradient-border {
    @apply border-2 border-transparent bg-clip-border;
    background-image: var(--gradient-border);
  }

  .glow-effect {
    @apply shadow-glow;
  }

  .pulse-effect {
    @apply animate-pulse;
  }

  .spin-effect {
    @apply animate-spin;
  }

  .bounce-effect {
    @apply animate-bounce;
  }

  .math-display {
    position: relative;
    margin: 1em 0;
    overflow-x: auto;
    
    .equation-number {
      position: absolute;
      right: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--muted-foreground);
    }

    &:hover .copy-button {
      opacity: 1;
    }
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }

  @keyframes float {

    0%,
    100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-8px);
    }
  }

  @layer utilities {
    .glitch-base {
      position: relative;
      text-shadow:
        0.05em 0 0 var(--glitch-color1),
        -0.05em -0.025em 0 var(--glitch-color2),
        -0.025em 0.05em 0 var(--glitch-color3);
      animation: glitch 750ms infinite;

      &::before,
      &::after {
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0.8;
      }

      &::before {
        animation: glitch-noise 4s infinite linear alternate-reverse;
        clip-path: polygon(0 var(--glitch-gap), 100% var(--glitch-gap), 100% calc(1% + var(--glitch-gap)), 0 calc(1% + var(--glitch-gap)));
      }

      &::after {
        animation: glitch-noise 2s infinite linear alternate;
        clip-path: polygon(0 calc(99% - var(--glitch-gap)), 100% calc(99% - var(--glitch-gap)), 100% calc(100% - var(--glitch-gap)), 0 calc(100% - var(--glitch-gap)));
      }
    }

    .glitch-layer-1 {
      clip-path: polygon(0 0, 100% 0, 100% 33.33333%, 0 33.33333%);
      transform: translate(-0.05em, -0.025em);
      animation:
        glitch-anim-1 4s infinite linear alternate-reverse,
        glitch-movement 5s infinite;
      filter: blur(var(--glitch-blur));
      mix-blend-mode: screen;
    }

    .glitch-layer-2 {
      clip-path: polygon(0 66.66667%, 100% 66.66667%, 100% 100%, 0 100%);
      transform: translate(0.05em, 0.025em);
      animation:
        glitch-anim-2 3s infinite linear alternate-reverse,
        glitch-movement 4s infinite reverse;
      filter: blur(var(--glitch-blur));
      mix-blend-mode: multiply;
    }

    .gradient-text {
      @apply bg-clip-text text-transparent;
      background-image: var(--gradient-text);
    }

    .gradient-heading {
      @apply bg-clip-text text-transparent;
      background-image: var(--gradient-heading);
    }

    .image-transition {
      @apply transition-all duration-700 ease-out;

      &:hover {
        @apply scale-110;
      }
    }

    .header-overlay {
      background: var(--gradient-header-overlay);
    }
  }

  @keyframes glitch {
    0% {
      text-shadow:
        0.05em 0 0 var(--glitch-color1),
        -0.05em -0.025em 0 var(--glitch-color2),
        -0.025em 0.05em 0 var(--glitch-color3);
      filter: blur(0);
    }

    14% {
      text-shadow:
        0.05em 0 0 var(--glitch-color2),
        -0.05em -0.025em 0 var(--glitch-color3),
        -0.025em 0.05em 0 var(--glitch-color1);
      filter: blur(var(--glitch-blur));
    }

    28% {
      text-shadow:
        0.05em 0 0 var(--glitch-color3),
        -0.05em -0.025em 0 var(--glitch-color1),
        -0.025em 0.05em 0 var(--glitch-color2);
      filter: blur(0);
    }

    42% {
      text-shadow:
        -0.05em 0 0 var(--glitch-color1),
        0.025em 0.025em 0 var(--glitch-color2),
        -0.05em -0.05em 0 var(--glitch-color3);
      filter: blur(var(--glitch-blur));
    }

    100% {
      text-shadow:
        0.05em 0 0 var(--glitch-color1),
        -0.05em -0.025em 0 var(--glitch-color2),
        -0.025em 0.05em 0 var(--glitch-color3);
      filter: blur(0);
    }
  }

  @keyframes glitch-anim-1 {
    0% {
      transform: translate(0);
    }

    20% {
      transform: translate(-2px, 2px);
    }

    40% {
      transform: translate(-2px, -2px);
    }

    60% {
      transform: translate(2px, 2px);
    }

    80% {
      transform: translate(2px, -2px);
    }

    100% {
      transform: translate(0);
    }
  }

  @keyframes glitch-anim-2 {
    0% {
      transform: translate(0);
    }

    20% {
      transform: translate(2px, 2px);
    }

    40% {
      transform: translate(2px, -2px);
    }

    60% {
      transform: translate(-2px, 2px);
    }

    80% {
      transform: translate(-2px, -2px);
    }

    100% {
      transform: translate(0);
    }
  }

  @keyframes glitch-movement {

    0%,
    100% {
      transform: translate(0);
    }

    20% {
      transform: translate(-2px, 2px);
    }

    40% {
      transform: translate(-2px, -2px) skewX(10deg);
    }

    60% {
      transform: translate(2px, 2px) skewX(-10deg);
    }

    80% {
      transform: translate(2px, -2px);
    }
  }

  @keyframes glitch-noise {
    0% {
      clip-path: inset(40% 0 61% 0);
      transform: translate(-20px, -10px);
    }

    20% {
      clip-path: inset(92% 0 1% 0);
      transform: translate(20px, 10px);
    }

    40% {
      clip-path: inset(43% 0 1% 0);
      transform: translate(-20px, 10px) skewX(3deg);
    }

    60% {
      clip-path: inset(25% 0 58% 0);
      transform: translate(20px, -10px) skewX(-3deg);
    }

    80% {
      clip-path: inset(54% 0 7% 0);
      transform: translate(-20px, 10px);
    }

    100% {
      clip-path: inset(58% 0 43% 0);
      transform: translate(20px, -10px);
    }
  }

  @keyframes gradientMove {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
}