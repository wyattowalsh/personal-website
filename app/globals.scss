@use 'sass:math';
@use 'variables.module.scss' as variables;

@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@import 'katex/dist/katex.min.css';

@function random-percentage() {
  @return math.random(100) + 0%;
}

@function random-translate() {
  @return math.random(10) - 5 + px;
}

@layer base {
  :root {
    @include variables.light;
  }

  html.dark {
    @include variables.dark;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  a:not(.no-underline) {
    @apply text-primary underline transition-colors duration-300;
  }

  a.no-underline,
  .no-underline a {
    text-decoration: none;
  }

  a:hover {
    color: var(--primary-foreground);
    text-decoration: underline;
  }

  .prose {
    @apply mx-auto;
    color: var(--foreground);
  }

  code {
    @apply bg-muted text-accent-foreground px-1.5 py-0.5 rounded;
  }

  pre {
    @apply bg-card text-card-foreground p-4 rounded-lg overflow-x-auto;
  }

  .math-container {
    @apply relative my-4 mx-16;
    
    .katex-display {
      @apply overflow-x-auto overflow-y-visible;
      
      &::-webkit-scrollbar {
        @apply h-1.5;
      }
      
      &::-webkit-scrollbar-track {
        @apply bg-transparent;
      }
      
      &::-webkit-scrollbar-thumb {
        @apply bg-slate-400/20 hover:bg-slate-400/30 rounded-full transition-colors duration-300;
      }
    }

    .katex {
      @apply overflow-visible;
    }

    &:hover {
      .katex-display::-webkit-scrollbar-thumb {
        @apply bg-primary opacity-20 hover:opacity-30;
      }
    }
  }

  .math-inline {
    @apply inline-flex items-center rounded border border-opacity-30 border-border bg-muted bg-opacity-30 px-2 py-1 dark:bg-opacity-10 dark:bg-muted;
  }

  .math {
    font-family: 'KaTeX_Main', serif;
    color: var(--math-text-color);
  }

  .math-inline {
    display: inline-block;
    background-color: var(--math-inline-bg);
    padding: 0.1em 0.2em;
    border-radius: 4px;
  }

  .math-display {
    display: block;
    background-color: var(--math-display-bg);
    padding: 0.5em;
    margin: 1em 0;
    border-radius: 8px;
    text-align: center;
    position: relative;
  }

  .equation-number {
    position: absolute;
    right: 0.5em;
    bottom: 0.5em;
    font-size: 0.85em;
    color: var(--math-index-color);
  }
}

@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{math.percentage(math.div($i, 2 * $steps))} {
      clip-path: inset(random-percentage() 0 random-percentage() 0);
      transform: translate(random-translate(), random-translate());
    }
  }
}

@layer components {
  .cyber-grid {
    background-image: 
      linear-gradient(var(--cyber-grid-color) 1px, transparent 1px),
      linear-gradient(90deg, var(--cyber-grid-color) 1px, transparent 1px);
    background-size: var(--cyber-grid-size) var(--cyber-grid-size);
    width: 100%;
    height: 100%;
    transform-origin: center;
    animation: grid-flow 20s linear infinite;
  }

  .glitch-scanlines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent 0%,
      var(--scan-line-color) 0.5%,
      transparent 1%
    );
    animation: scanlines 10s linear infinite;
  }

  .noise-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org-2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.75' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: var(--noise-intensity);
    mix-blend-mode: overlay;
    pointer-events: none;
  }

  .glitch-text {
    position: relative;
    animation: glitch-text 3s infinite;
    
    &::before,
    &::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
    
    &::before {
      left: 2px;
      text-shadow: -2px 0 var(--glitch-color-1);
      clip: rect(24px, 550px, 90px, 0);
      animation: glitch-anim 3s infinite linear alternate-reverse;
    }
    
    &::after {
      left: -2px;
      text-shadow: -2px 0 var(--glitch-color-2);
      clip: rect(85px, 550px, 140px, 0);
      animation: glitch-anim 2s infinite linear alternate-reverse;
    }
  }
}

@keyframes grid-flow {
  0% {
    transform: perspective(500px) rotateX(60deg) translateY(0);
  }
  100% {
    transform: perspective(500px) rotateX(60deg) translateY(var(--cyber-grid-size));
  }
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100%);
  }
}

