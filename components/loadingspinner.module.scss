/* LoadingSpinner.module.scss */
@use 'sass:math';

// Variables
:root {
  --spinner-primary: var(--primary);
  --spinner-secondary: var(--secondary);
  --spinner-accent: var(--accent);
  --spinner-bg: var(--background);
  --spinner-size-sm: 32px;
  --spinner-size-md: 48px;
  --spinner-size-lg: 64px;
}

// Enhanced cube spinner
.cube-spinner {
  width: var(--spinner-size-md);
  height: var(--spinner-size-md);
  perspective: 1000px;
  transform-style: preserve-3d;
  
  @media (min-width: 768px) {
    width: var(--spinner-size-lg);
    height: var(--spinner-size-lg);
  }
}

.cube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  animation: rotateCube 2s infinite linear;

  &::before,
  &::after,
  .face {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      var(--spinner-primary) 0%,
      var(--spinner-accent) 100%
    );
    opacity: 0.8;
    backface-visibility: visible;
    transition: all 0.3s ease;
    box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.3);
  }

  &::before {
    transform: rotateY(90deg);
  }

  &::after {
    transform: rotateX(90deg);
  }

  .face {
    &:nth-child(1) { transform: translateZ(32px); }
    &:nth-child(2) { transform: rotateY(180deg) translateZ(32px); }
    &:nth-child(3) { transform: rotateY(90deg) translateZ(32px); }
    &:nth-child(4) { transform: rotateY(-90deg) translateZ(32px); }
    &:nth-child(5) { transform: rotateX(90deg) translateZ(32px); }
    &:nth-child(6) { transform: rotateX(-90deg) translateZ(32px); }
  }
}

// Enhanced glitch effect
.glitch-base {
  --glitch-color1: var(--spinner-primary);
  --glitch-color2: var(--spinner-accent);
  --glitch-color3: var(--spinner-secondary);
  --glitch-gap: 3px;
  --glitch-blur: 1px;

  position: relative;
  text-shadow: 
    0.05em 0 0 var(--glitch-color1),
    -0.05em -0.025em 0 var(--glitch-color2),
    -0.025em 0.05em 0 var(--glitch-color3);
  animation: glitch 750ms infinite;

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    animation: glitch-anim 4s infinite linear alternate-reverse;
  }

  &::after {
    clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
    animation: glitch-anim 2s infinite linear alternate;
  }
}

// Enhanced container styles
.spinner-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
  background: rgba(255, 255, 255, 0.05);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border-radius: 1rem;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06),
    inset 0 0 20px rgba(255, 255, 255, 0.05);
  transition: all 0.3s ease;

  @supports not (backdrop-filter: blur(10px)) {
    background: rgba(255, 255, 255, 0.9);
    .dark & {
      background: rgba(0, 0, 0, 0.8);
    }
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05),
      inset 0 0 25px rgba(255, 255, 255, 0.1);
  }
}

// Enhanced animations
@keyframes rotateCube {
  0% {
    transform: 
      rotateX(0deg) 
      rotateY(0deg) 
      rotateZ(0deg);
  }
  100% {
    transform: 
      rotateX(360deg) 
      rotateY(360deg) 
      rotateZ(360deg);
  }
}

@keyframes glitch {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage(math.div($i, $steps))} {
      clip-path: inset(
        #{math.random(100)}% 0 
        #{math.random(100)}% 0
      );
      transform: translate(
        #{math.random(10) - 5}px,
        #{math.random(10) - 5}px
      );
    }
  }
}

// Enhanced wave effect
.wave-effect {
  display: flex;
  align-items: center;
  gap: 4px;

  .dot {
    width: 8px;
    height: 8px;
    background: var(--spinner-primary);
    border-radius: 50%;
    animation: wave 1.5s ease-in-out infinite;
    filter: drop-shadow(0 0 5px var(--spinner-primary));

    @for $i from 1 through 3 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i * 0.1}s;
      }
    }
  }
}

// Enhanced pulse effect
.pulse-effect {
  position: relative;

  &::before,
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 2px solid var(--spinner-primary);
    border-radius: 50%;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    filter: drop-shadow(0 0 3px var(--spinner-primary));
  }

  &::after {
    animation-delay: 1s;
  }
}

// Enhanced ring effect
.ring-effect {
  position: relative;
  width: var(--spinner-size-md);
  height: var(--spinner-size-md);

  &::before,
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 4px solid transparent;
    border-top-color: var(--spinner-primary);
    border-right-color: var(--spinner-primary);
    border-radius: 50%;
    animation: spin 1.5s linear infinite;
    filter: drop-shadow(0 0 5px var(--spinner-primary));
  }

  &::after {
    border-bottom-color: var(--spinner-primary);
    border-left-color: var(--spinner-primary);
    opacity: 0.5;
    animation-duration: 2s;
    animation-direction: reverse;
  }
}

// Animation keyframes
@keyframes wave {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Message styles
.message {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--foreground);
  opacity: 0.8;
  text-align: center;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  text-shadow: 0 0 10px rgba(var(--primary-rgb), 0.3);
  
  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

// Accessibility
@media (prefers-reduced-motion: reduce) {
  .cube,
  .glitch-base,
  .wave-effect .dot,
  .pulse-effect::before,
  .pulse-effect::after,
  .ring-effect::before,
  .ring-effect::after {
    animation: none;
  }
}
