/* components/blogtitle.module.scss */
@use 'sass:math';

.glitch-text {
  position: relative;
  display: inline-block;
  color: transparent;
  text-shadow: 
    0 0 1px rgba(255, 255, 255, 0.9),
    0 0 2px rgba(255, 255, 255, 0.7);
  animation: float 6s ease-in-out infinite;

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background: var(--background);
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  &::before {
    left: -2px;
    text-shadow: 2px 0 var(--glitch-color-1);
  }

  &::after {
    left: 2px;
    text-shadow: -2px 0 var(--glitch-color-2);
  }
}

.glitch-layer {
  position: absolute;
  top: 0;
  left: 0;
  mix-blend-mode: screen;
  opacity: 0.5;
  filter: blur(0.5px);
  will-change: transform;
  inset: 0;
  mix-blend-mode: difference;
  animation: glitch-layer 4s infinite linear;
}

.glitch-layer--1 {
  animation: glitch-anim-1 3s infinite linear alternate-reverse;
  transform: translateX(-1px);
  color: var(--glitch-color1);
  text-shadow: 
    1px 0 1px rgba(255, 0, 255, 0.2),
    -1px 0 1px rgba(0, 255, 255, 0.2);
}

.glitch-layer--2 {
  animation: glitch-anim-2 2.5s infinite linear alternate;
  transform: translateX(1px);
  color: var(--glitch-color2);
  text-shadow: 
    1px 0 1px rgba(0, 255, 255, 0.2),
    -1px 0 1px rgba(255, 255, 0, 0.2);
}

.glitch-layer--3 {
  animation: glitch-anim-3 2.5s infinite linear alternate-reverse;
  color: var(--glitch-color3);
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: polygon(0 2%, 100% 2%, 100% 3%, 0 3%);
    transform: translate(-2px) skew(0.5deg);
    filter: blur(0.5px);
  }
  20% {
    clip-path: polygon(0 12%, 100% 12%, 100% 14%, 0 14%);
    transform: translate(2px) skew(-0.5deg);
    filter: blur(0.25px);
  }
  40% {
    clip-path: polygon(0 8%, 100% 8%, 100% 9%, 0 9%);
    transform: translate(-1px, 1px) skew(0.25deg);
    filter: blur(0.75px);
  }
  60% {
    clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
    transform: translate(1px, -1px) skew(-0.25deg);
    filter: blur(0.5px);
  }
  80% {
    clip-path: polygon(0 15%, 100% 15%, 100% 16%, 0 16%);
    transform: translate(2px) skew(0.5deg);
    filter: blur(0.25px);
  }
  100% {
    clip-path: polygon(0 10%, 100% 10%, 100% 11%, 0 11%);
    transform: translate(0) skew(0);
    filter: blur(0.5px);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: polygon(0 25%, 100% 25%, 100% 26%, 0 26%);
    transform: translate(2px) skew(-0.5deg);
    filter: blur(0.25px);
  }
  20% {
    clip-path: polygon(0 30%, 100% 30%, 100% 31%, 0 31%);
    transform: translate(-2px) skew(0.5deg);
    filter: blur(0.5px);
  }
  40% {
    clip-path: polygon(0 35%, 100% 35%, 100% 36%, 0 36%);
    transform: translate(1px, -1px) skew(-0.25deg);
    filter: blur(0.75px);
  }
  60% {
    clip-path: polygon(0 40%, 100% 40%, 100% 41%, 0 41%);
    transform: translate(-1px, 1px) skew(0.25deg);
    filter: blur(0.5px);
  }
  80% {
    clip-path: polygon(0 45%, 100% 45%, 100% 46%, 0 46%);
    transform: translate(2px) skew(-0.5deg);
    filter: blur(0.25px);
  }
  100% {
    clip-path: polygon(0 50%, 100% 50%, 100% 51%, 0 51%);
    transform: translate(0) skew(0);
    filter: blur(0.5px);
  }
}

@keyframes glitch-anim-3 {
  0% {
    clip-path: inset(10% 0 80% 0);
    transform: translate(0, 0);
  }
  20% {
    clip-path: inset(30% 0 60% 0);
    transform: translate(-5px, 5px) rotate(3deg);
  }
  40% {
    clip-path: inset(50% 0 40% 0);
    transform: translate(5px, -5px) rotate(-3deg);
  }
  60% {
    clip-path: inset(70% 0 20% 0);
    transform: translate(-5px, -5px) rotate(2deg);
  }
  80% {
    clip-path: inset(90% 0 0 0);
    transform: translate(5px, 5px) rotate(-2deg);
  }
  100% {
    clip-path: inset(100% 0 0 0);
    transform: translate(0, 0) rotate(0deg);
  }
}

@function random-percentage() {
  @return math.random(100) + 0%;
}

@function random-translate() {
  @return math.random(10) - 5 + px;
}

@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{math.percentage(math.div($i, 2 * $steps))} {
      clip-path: inset(random-percentage() 0 random-percentage() 0);
      transform: translate(random-translate(), random-translate());
    }
  }
}

// Add noise texture
.glitch-text::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.7' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
  opacity: 0.02;
  mix-blend-mode: overlay;
  pointer-events: none;
}

// Add RGB split effect
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  text-shadow: 
    2px 0 1px rgba(255, 0, 0, 0.3),
    -2px 0 1px rgba(0, 0, 255, 0.3),
    0 0 3px rgba(255, 255, 255, 0.4);
  animation: rgb-split 3s infinite linear;
  opacity: 0.3;
}

@keyframes rgb-split {
  0% { transform: translate(0) skew(0deg); }
  25% { transform: translate(-1px, 1px) skew(0.5deg); }
  50% { transform: translate(1px, -1px) skew(-0.5deg); }
  75% { transform: translate(-1px, -1px) skew(0.5deg); }
  100% { transform: translate(0) skew(0deg); }
}

// Add plasma effect
.glitch-base {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
      circle at center,
      rgba(255,255,255,0.1) 0%,
      rgba(255,255,255,0.05) 25%,
      transparent 70%
    );
    animation: plasma 8s ease infinite;
    mix-blend-mode: overlay;
  }
}

@keyframes plasma {
  0% { transform: rotate(0deg) scale(1); }
  50% { transform: rotate(180deg) scale(1.2); }
  100% { transform: rotate(360deg) scale(1); }
}

// Add chromatic aberration
.glitch-text {
  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    animation: chrome-top 3s infinite linear alternate-reverse;
  }

  &::before {
    left: -2px;
    text-shadow: 2px 0 #ff0000;
  }

  &::after {
    left: 2px;
    text-shadow: -2px 0 #00ffff;
  }
}

@keyframes chrome-top {
  0% { transform: translate(0); }
  50% { transform: translate(-1px, 1px); }
  100% { transform: translate(1px, -1px); }
}

// Add scanline effect
.scanlines {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0,0,0,0.1) 0px,
    rgba(0,0,0,0.1) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
  z-index: 10;
  
  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: rgba(0, 255, 255, 0.1);
    animation: scanline 6s linear infinite;
  }
}

@keyframes scanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

.glitch-container {
  position: relative;
  font-family: var(--font-code);
  letter-spacing: -2px;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.glitch-copy-1,
.glitch-copy-2 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-copy-1 {
  transform: translate(-2px, 2px);
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  animation: glitch-anim-1 2.5s infinite;
  background: linear-gradient(45deg, 
    rgba(255, 0, 255, 0.7),
    rgba(0, 255, 255, 0.7));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.glitch-copy-2 {
  transform: translate(2px, -2px);
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
  animation: glitch-anim-2 2s infinite;
  background: linear-gradient(-45deg,
    rgba(0, 255, 255, 0.7),
    rgba(255, 0, 255, 0.7));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.card-container {
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      linear-gradient(90deg,
        transparent 0%,
        rgba(0, 255, 255, 0.1) 45%,
        rgba(0, 255, 255, 0.1) 55%,
        transparent 100%);
    animation: scanner 3s ease-in-out infinite;
  }
}

.cyber-grid {
  position: absolute;
  inset: 0;
  background-image: 
    linear-gradient(transparent 95%, rgba(0, 255, 255, 0.2) 95%),
    linear-gradient(90deg, transparent 95%, rgba(0, 255, 255, 0.2) 95%);
  background-size: 20px 20px;
  animation: gridMove 20s linear infinite;
}

.cyber-brackets {
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    border: 2px solid cyan;
    opacity: 0.5;
  }

  &::before {
    top: -10px;
    left: -10px;
    border-right: 0;
    border-bottom: 0;
  }

  &::after {
    bottom: -10px;
    right: -10px;
    border-left: 0;
    border-top: 0;
  }
}

@keyframes scanner {
  0%, 100% { transform: translateX(-100%); }
  50% { transform: translateX(100%); }
}

@keyframes gridMove {
  from { background-position: 0 0; }
  to { background-position: 20px 20px; }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotateX(0);
  }
  50% {
    transform: translateY(-10px) rotateX(5deg);
  }
}

@keyframes glitch-anim-1 {
  0% { clip-path: inset(40% 0 61% 0); }
  20% { clip-path: inset(92% 0 1% 0); }
  40% { clip-path: inset(43% 0 1% 0); }
  60% { clip-path: inset(25% 0 58% 0); }
  80% { clip-path: inset(54% 0 7% 0); }
  100% { clip-path: inset(58% 0 43% 0); }
}

@keyframes glitch-anim-2 {
  0% { clip-path: inset(10% 0 85% 0); }
  20% { clip-path: inset(75% 0 5% 0); }
  40% { clip-path: inset(28% 0 40% 0); }
  60% { clip-path: inset(82% 0 4% 0); }
  80% { clip-path: inset(15% 0 65% 0); }
  100% { clip-path: inset(70% 0 26% 0); }
}

.title {
  position: relative;
  &::after {
    content: attr(data-text);
    position: absolute;
    left: 2px;
    text-shadow: -1px 0 red;
    top: 0;
    color: transparent;
    background: rgba(255, 0, 0, 0.4);
    overflow: hidden;
    animation: noise-anim 2s infinite linear alternate-reverse;
  }
}

@keyframes noise-anim {
  0% {
    clip-path: inset(40% 0 61% 0);
  }
  100% {
    clip-path: inset(58% 0 43% 0);
  }
}
