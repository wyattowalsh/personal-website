[{"categories":null,"contents":"Generative Models     To what degree will our inventions unearth deeper understandings about ourselves?                  Reinforcement Learning     From the Old         To the Newer     With the Newest         ","permalink":"https://wwalsh.io/interests/artificial-intelligence/","tags":["Artificial Intelligence","Machine Learning","Reinforcement Learning","Generative Models","Super Resolution","Unsupervised Learning"],"title":"Artificial Intelligence"},{"categories":null,"contents":"","permalink":"https://wwalsh.io/interests/blockchain/","tags":["Cryptography","Cryptocurrencies","Bitcoin","Ethereum","Trust","Fairness","Consensus","Asset Pricing","System Design"],"title":"Blockchain"},{"categories":null,"contents":"Overview  Facilitated other’s sports-analytics data projects by creating the most robust, open-source, NBA-related database. Ensured $0 capital overhead requirements by using free cloud computing and dataset tools. Enabled better testing, deployment, and expansion by containerizing each pipeline segment’s Python scripts.   ","permalink":"https://wwalsh.io/projects/creations/basketball-dataset/","tags":["Data Science","Data Engineering","ETL","Automation","Kaggle","Basketball","Open Source"],"title":"Fully Automated Data Pipeline Using Free, Cloud-Based Solutions"},{"categories":null,"contents":"Published in Towards Data Science, this article, part three of a three-part series, explores the concepts of the Lasso for regression, pathwise coordinate descent optimization as a discrete optimization algorithm to find model parameters, and the Elastic Net for regression.\n","permalink":"https://wwalsh.io/publications/implementing-pathwise-coordinate-descent-for-the-lasso-and-the-elastic-net-in-python-using-numpy/","tags":["Machine Learning","Optimization","Convex Optimization","Regression","Towards Data Science","Medium"],"title":"Regularized Linear Regression Models: Implementing Pathwise Coordinate Descent For The Lasso and The Elastic Net In Python Using NumPy"},{"categories":null,"contents":"Published in Towards Data Science, this article, part two of a three-part series, explores the concepts of model error modeling, model overfitting/underfitting, statistical shrinkage for bias reduction, and Ridge Regression (Tikhonov Regularization)\n","permalink":"https://wwalsh.io/publications/using-ridge-regression-to-overcome-drawbacks-of-ordinary-least-squares/","tags":["Machine Learning","Optimization","Convex Optimization","Regression","Towards Data Science","Medium"],"title":"Regularized Linear Regression Models: Using Ridge Regression to Overcome Drawbacks of Ordinary Least Squares (OLS)"},{"categories":null,"contents":"Published in Towards Data Science, this article, part one of a three-part series, explores the concepts of regression, linear modeling, and both derivations and explanations of the ordinary least squares regressor\n","permalink":"https://wwalsh.io/publications/basics-of-linear-regression-modeling-and-ordinary-least-squares/","tags":["Machine Learning","Optimization","Convex Optimization","Regression","Towards Data Science","Medium"],"title":"Regularized Linear Regression Models: Basics of Linear Regression Modeling and Ordinary Least Squares (OLS)"},{"categories":null,"contents":"Explanations and Python implementations of Ordinary Least Squares regression, Ridge regression, Lasso regression (solved via Coordinate Descent), and Elastic Net regression (also solved via Coordinate Descent) applied to assess wine quality given numerous numerical features. Additional data analysis and visualization in Python is included.\n ","permalink":"https://wwalsh.io/projects/creations/regularized-regression/","tags":["Data Science","Machine Learning","Regression","Python","Optimization","NumPy","Research"],"title":" Regularized Linear Regression Deep Dive"},{"categories":null,"contents":"Overview  ","permalink":"https://wwalsh.io/projects/creations/higher-education-simulation/","tags":["Simulation","Python","Jupyter","Visualization","Modeling","Higher Education","Research"],"title":"Conceptualizing Higher Education Institutions: An Agent-Based Modelling Approach"},{"categories":null,"contents":"The goal of this project was to craft models in order to accurately predict the attendance of a future National Basketball Association (NBA) game. Game data, including attendance, was scraped from stats.nba.com and stadium capacity data collected from numerous online sources. This data was then cleaned, processed, explored through visualizations and statistical tests, and then modeled using many regression techniques including regularized methods, ensemble methods such as Random Forest and Boosting, and neural networks. Feature significance was also determined through techniques such as the Group Lasso and ensembling. The overall mean absolute error (MAE) in the best models was found to be around 750 people. A paper is included summarizing the goals and findings along with notions of future work that could be applied as well. The coding of this project was carried out in a combination of R and Python.\n ","permalink":"https://wwalsh.io/projects/creations/nba-attendance-prediction/","tags":["Data Science","Machine Learning","Regression","Python","Basketball","Bash/Shell","Visualization","Research"],"title":" Machine Learning for NBA Game Attendance Prediction"},{"categories":null,"contents":"The goal of this project is to find optimally fair allocations of divisible and non-divisible goods for a group of people under three different definitions of fairness under envy-freeness with certain assumptions. Mixed-integer linear programming (MILP) formulations are created in AMPL and solved using CPLEX resulting in the generation of datasets consisting of the minimal approximate envy value and solver elapsed time for different combinations of number of people and number of goods. Interactive 3D visualizations of this dataset are created in Python and analysis of results is conducted.\n ","permalink":"https://wwalsh.io/projects/creations/mixed-integer-linear-programming-for-fair-division-problems/","tags":["Optimization","IBM CPLEX","AMPL","Python","Jupyter","Bash/Shell","Visualization","Research"],"title":"Mixed Integer Linear Programming for Fair Division Problems"},{"categories":null,"contents":"Intro Doesn\u0026rsquo;t matter whether it\u0026rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.\n First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty \u0026lsquo;man in the middle\u0026quot; attack. Finally it gives your site that touch of class\u0026hellip;. which of course a classy person like yourself relies on.  Once you implement SSL certificates on your server you\u0026rsquo;ll want to require secure connections using Apache\u0026rsquo;s rewrite module. Now I won\u0026rsquo;t dwell on the creation and signing of certificates, its already well documented. If your just starting out though,heres a few links I recommend;\n Creating self-signed certificates (free, but should only be used internally or for testing, users will; see an \u0026lsquo;Untrusted\u0026quot; warning) Requesting a CA Signed certificate (not free, but the final certificate is trusted and seamless for users)  The second link uses the schools internal CA, you will need to pay a public CA like Entrust or Verisign. All of this information is aimed at \u0026lsquo;nix or solaris servers running apache. Why? cause a production windows server is laughable :-p\nNow that you have a certificate, whats next? So there you are you have a shiny new Certificate and Server key, how do you force visitors to your apache driven site to use the SSL? You copied the certificates into the appropite locations right? And you have made the needed changes in httpd.conf right? So now when you view https://example.com you see a \u0026lsquo;trusted\u0026rsquo; warning or your site right? If No to any of these than this article does a pretty good job of outlining those steps.\nThe SSL Works, How do I force connections to use it? First you need to decide if you want to force every page on your site to use SSL, or only a particular sub-domain, or maybe just your admin directory. Since the overhead is minimal there is no harm is forcing the entire domain to leverage SSL, but if it is a self-signed certificate for your personal use than you\u0026rsquo;ll most certainly want to restrict its use to your own areas. This prevents users from seeing that nasty warning \u0026ldquo;This server is not trusted\u0026rdquo; You\u0026rsquo;ll know if your using SSL because the url prefix changes from http to https (s for secure).\nForcing entire domain to use SSL You want any visit, any where to use ssl. This probably the simplest solution. Create or append to your htaccess file in the top directory of your server. Some people use a port check (80 is typically http, while 443 is https) but if you have alernate configs or the user just adds :8080 to the end of the url this method is useless. Instead check whether the https environmental variable is set, if not then redirect.\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 \\[R,L\\] Forcing sub-domains to use SSL Maybe you only want mysecretarea.example.com to use SSL, that\u0026rsquo;s easy enough. Its the same premise as above, but you move the htaccess file into the directory that corresponds to the subdomain. Also change the second line like below;\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://mysecretarea.%{SERVER_NAME}$1 \\[R,L\\] Forcing a directory to use SSL This method cn get a little hairier if your using aliases or redirects on top of this one. You\u0026rsquo;ll need to consider what order the commands are read. The basic principle is like so. You want all visits to example.com/admin to use ssl. Create a htaccess file in the parent directory. Again will check for the https variable, but this time we also check for the sub-directory to be in the path.\nRewriteCond %{HTTPS} !=on RewriteRule ^/admin/(.*)$ https://%{SERVER_NAME}/admin/$1 \\[R,L\\] ","permalink":"https://wwalsh.io/blog/force-ssl/","tags":["apache","apache","redirect","rewrite","ssl","web development"],"title":"Forcing Visits to use SSL"},{"categories":null,"contents":"","permalink":"https://wwalsh.io/interests/machine-learning-operations/","tags":["Machine Learning","Data Science","Data Engineering","Software Engineering","Model Drift","Model Deployment"],"title":"Machine Learning Operations"},{"categories":null,"contents":"","permalink":"https://wwalsh.io/interests/music/","tags":["Music Production","DJ","Hardstyle","Hard Dance","Music Festivals","Music Industry"],"title":"Music"},{"categories":null,"contents":"","permalink":"https://wwalsh.io/interests/optimization/","tags":["Machine Learning","Data Science","Optimization","Mathematical Programming","Calculus"],"title":"Optimization"},{"categories":null,"contents":"","permalink":"https://wwalsh.io/interests/physics/","tags":["Science","Physics","Quantum Mechanics","Relativity"],"title":"Physics"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional files To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"https://wwalsh.io/search/","tags":null,"title":"Search Results"}]